package bulma

templ HxButtonLink(color, size, text string, hx HtmxProperties) {
	<a
		class={ "button", color, size }
		if hx.HxGet != "" {
			hx-get={ hx.HxGet }
		}
		if hx.HxPost != "" {
			hx-post={ hx.HxPost }
		}
		if hx.HxTrigger != "" {
			hx-trigger={ hx.HxTrigger }
		}
		if hx.HxTarget != "" {
			hx-target={ hx.HxTarget }
		}
		if hx.HxSwap != "" {
			hx-swap={ hx.HxSwap }
		}
		if hx.HxBoost {
			hx-boost="true"
		}
		if hx.HxPushUrl {
			hx-push-url="true"
		}
		if hx.HxConfirm != "" {
			hx-confirm={ hx.HxConfirm }
		}
	>{ text }</a>
}

templ NewHxContainer(breakpoint, id string, hx HtmxProperties) {
	<div
		class={ "container", breakpoint }
		id={ id }
		if hx.HxGet != "" {
			hx-get={ hx.HxGet }
		}
		if hx.HxPut != "" {
			hx-put={ hx.HxPut }
		}
		if hx.HxPost != "" {
			hx-post={ hx.HxPost }
		}
		if hx.HxPatch != "" {
			hx-post={ hx.HxPatch }
		}
		if hx.HxDelete != "" {
			hx-post={ hx.HxDelete }
		}
		if hx.HxTrigger != "" {
			hx-trigger={ hx.HxTrigger }
		}
		if hx.HxTarget != "" {
			hx-target={ hx.HxTarget }
		}
		if hx.HxSwap != "" {
			hx-swap={ hx.HxSwap }
		}
		if hx.HxBoost {
			hx-boost="true"
		}
		if hx.HxPushUrl {
			hx-push-url="true"
		}
		if hx.HxConfirm != "" {
			hx-confirm={ hx.HxConfirm }
		}
	>
		{ children... }
	</div>
}

templ HxDropdownMenuLink(text string, hx HtmxProperties) {
	<a
		class="dropdown-item"
		if hx.HxGet != "" {
			hx-get={ hx.HxGet }
		}
		if hx.HxPut != "" {
			hx-put={ hx.HxPut }
		}
		if hx.HxPost != "" {
			hx-post={ hx.HxPost }
		}
		if hx.HxPatch != "" {
			hx-post={ hx.HxPatch }
		}
		if hx.HxDelete != "" {
			hx-post={ hx.HxDelete }
		}
		if hx.HxTrigger != "" {
			hx-trigger={ hx.HxTrigger }
		}
		if hx.HxTarget != "" {
			hx-target={ hx.HxTarget }
		}
		if hx.HxSwap != "" {
			hx-swap={ hx.HxSwap }
		}
		if hx.HxBoost {
			hx-boost="true"
		}
		if hx.HxPushUrl {
			hx-push-url="true"
		}
		if hx.HxConfirm !="" {
			hx-confirm={ hx.HxConfirm }
		}
	>{ text }</a>
}

templ HxNavbarItem(text string, hx HtmxProperties) {
	<a
		class="navbar-item"
		if hx.HxGet != "" {
			hx-get={ hx.HxGet }
		}
		if hx.HxPut != "" {
			hx-put={ hx.HxPut }
		}
		if hx.HxPost != "" {
			hx-post={ hx.HxPost }
		}
		if hx.HxPatch != "" {
			hx-post={ hx.HxPatch }
		}
		if hx.HxDelete != "" {
			hx-post={ hx.HxDelete }
		}
		if hx.HxTrigger != "" {
			hx-trigger={ hx.HxTrigger }
		}
		if hx.HxTarget != "" {
			hx-target={ hx.HxTarget }
		}
		if hx.HxSwap != "" {
			hx-swap={ hx.HxSwap }
		}
		if hx.HxBoost {
			hx-boost="true"
		}
		if hx.HxPushUrl {
			hx-push-url="true"
		}
		if hx.HxConfirm !="" {
			hx-confirm={ hx.HxConfirm }
		}
	>{ text }</a>
}

templ HxLink(text string, hx HtmxProperties) {
	<a
		if hx.HxGet != "" {
			hx-get={ hx.HxGet }
		}
		if hx.HxPut != "" {
			hx-put={ hx.HxPut }
		}
		if hx.HxPost != "" {
			hx-post={ hx.HxPost }
		}
		if hx.HxPatch != "" {
			hx-post={ hx.HxPatch }
		}
		if hx.HxDelete != "" {
			hx-post={ hx.HxDelete }
		}
		if hx.HxTrigger != "" {
			hx-trigger={ hx.HxTrigger }
		}
		if hx.HxTarget != "" {
			hx-target={ hx.HxTarget }
		}
		if hx.HxSwap != "" {
			hx-swap={ hx.HxSwap }
		}
		if hx.HxBoost {
			hx-boost="true"
		}
		if hx.HxPushUrl {
			hx-push-url="true"
		}
		if hx.HxConfirm !="" {
			hx-confirm={ hx.HxConfirm }
		}
	>
		<span>{ text }</span>
	</a>
}

templ HxTabLink(text string, isActive bool, hx HtmxProperties) {
	if isActive {
		<li class="is-active">
			<a
				if hx.HxGet != "" {
					hx-get={ hx.HxGet }
				}
				if hx.HxPut != "" {
					hx-put={ hx.HxPut }
				}
				if hx.HxPost != "" {
					hx-post={ hx.HxPost }
				}
				if hx.HxPatch != "" {
					hx-post={ hx.HxPatch }
				}
				if hx.HxDelete != "" {
					hx-post={ hx.HxDelete }
				}
				if hx.HxTrigger != "" {
					hx-trigger={ hx.HxTrigger }
				}
				if hx.HxTarget != "" {
					hx-target={ hx.HxTarget }
				}
				if hx.HxSwap != "" {
					hx-swap={ hx.HxSwap }
				}
				if hx.HxBoost {
					hx-boost="true"
				}
				if hx.HxPushUrl {
					hx-push-url="true"
				}
				if hx.HxConfirm !="" {
					hx-confirm={ hx.HxConfirm }
				}
			>{ text }</a>
		</li>
	} else {
		<li>
			<a
				if hx.HxGet != "" {
					hx-get={ hx.HxGet }
				}
				if hx.HxPut != "" {
					hx-put={ hx.HxPut }
				}
				if hx.HxPost != "" {
					hx-post={ hx.HxPost }
				}
				if hx.HxPatch != "" {
					hx-post={ hx.HxPatch }
				}
				if hx.HxDelete != "" {
					hx-post={ hx.HxDelete }
				}
				if hx.HxTrigger != "" {
					hx-trigger={ hx.HxTrigger }
				}
				if hx.HxTarget != "" {
					hx-target={ hx.HxTarget }
				}
				if hx.HxSwap != "" {
					hx-swap={ hx.HxSwap }
				}
				if hx.HxBoost {
					hx-boost="true"
				}
				if hx.HxPushUrl {
					hx-push-url="true"
				}
				if hx.HxConfirm !="" {
					hx-confirm={ hx.HxConfirm }
				}
			>{ text }</a>
		</li>
	}
}

templ HxTabLinkIcon(text, fontAwesomeIcon string, isActive bool, hx HtmxProperties) {
	if isActive {
		<li class="is-active">
			<a
				if hx.HxGet != "" {
					hx-get={ hx.HxGet }
				}
				if hx.HxPut != "" {
					hx-put={ hx.HxPut }
				}
				if hx.HxPost != "" {
					hx-post={ hx.HxPost }
				}
				if hx.HxPatch != "" {
					hx-post={ hx.HxPatch }
				}
				if hx.HxDelete != "" {
					hx-post={ hx.HxDelete }
				}
				if hx.HxTrigger != "" {
					hx-trigger={ hx.HxTrigger }
				}
				if hx.HxTarget != "" {
					hx-target={ hx.HxTarget }
				}
				if hx.HxSwap != "" {
					hx-swap={ hx.HxSwap }
				}
				if hx.HxBoost {
					hx-boost="true"
				}
				if hx.HxPushUrl {
					hx-push-url="true"
				}
				if hx.HxConfirm !="" {
					hx-confirm={ hx.HxConfirm }
				}
			>
				<span class="icon is-small">
					<i class={ "fas", fontAwesomeIcon } aria-hidden="true"></i>
				</span>
				<span>{ text }</span>
			</a>
		</li>
	} else {
		<li>
			<a
				if hx.HxGet != "" {
					hx-get={ hx.HxGet }
				}
				if hx.HxPut != "" {
					hx-put={ hx.HxPut }
				}
				if hx.HxPost != "" {
					hx-post={ hx.HxPost }
				}
				if hx.HxPatch != "" {
					hx-post={ hx.HxPatch }
				}
				if hx.HxDelete != "" {
					hx-post={ hx.HxDelete }
				}
				if hx.HxTrigger != "" {
					hx-trigger={ hx.HxTrigger }
				}
				if hx.HxTarget != "" {
					hx-target={ hx.HxTarget }
				}
				if hx.HxSwap != "" {
					hx-swap={ hx.HxSwap }
				}
				if hx.HxBoost {
					hx-boost="true"
				}
				if hx.HxPushUrl {
					hx-push-url="true"
				}
				if hx.HxConfirm !="" {
					hx-confirm={ hx.HxConfirm }
				}
			>
				<span class="icon is-small">
					<i class={ "fas", fontAwesomeIcon } aria-hidden="true"></i>
				</span>
				<span>{ text }</span>
			</a>
		</li>
	}
}

templ NewHxTableBody(hx HtmxProperties) {
	<tbody
		if hx.HxGet != "" {
			hx-get={ hx.HxGet }
		}
		if hx.HxPut != "" {
			hx-put={ hx.HxPut }
		}
		if hx.HxPost != "" {
			hx-post={ hx.HxPost }
		}
		if hx.HxPatch != "" {
			hx-post={ hx.HxPatch }
		}
		if hx.HxDelete != "" {
			hx-post={ hx.HxDelete }
		}
		if hx.HxTrigger != "" {
			hx-trigger={ hx.HxTrigger }
		}
		if hx.HxTarget != "" {
			hx-target={ hx.HxTarget }
		}
		if hx.HxSwap != "" {
			hx-swap={ hx.HxSwap }
		}
		if hx.HxBoost {
			hx-boost="true"
		}
		if hx.HxPushUrl {
			hx-push-url="true"
		}
		if hx.HxConfirm !="" {
			hx-confirm={ hx.HxConfirm }
		}
	>
		{ children... }
	</tbody>
}
