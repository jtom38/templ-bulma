package main

import (
	bulma "github.com/jtom38/templ-bulma"
	"github.com/jtom38/templ-bulma/html"
	v1 "github.com/jtom38/templ-bulma/htmx/v1"
)

templ Example() {
	@html.New("en") {
		@html.NewHeader() {
			@bulma.UseBulmaCdn()
			@CssCode()
			@v1.UseHtmxCdn()
		}
		@html.NewBody() {
			@bulma.NewContainer(bulma.BreakpointDefault) {
				@bulma.Hero("templ-bulma", "Showing off how to use this package", bulma.SizeDefault, bulma.ColorDefault)
				@bulma.H2("Elements", false)
				@bulma.NewBlock() {
					@bulma.H3("Block", false)
					@bulma.ButtonNewTab("https://bulma.io/documentation/elements/block/", "Block Docs", bulma.ColorDefault, bulma.SizeDefault)
					@bulma.H4("Preview", false)
					This is written in a block!
				}
				@bulma.NewBlock() {
					@bulma.H3("Box", false)
					@bulma.ButtonNewTab("https://bulma.io/documentation/elements/box/", "Box Docs", bulma.ColorDefault, bulma.SizeDefault)
					@bulma.H4("Preview", false)
					@bulma.NewBox() {
						This accepts children and places them here.
						You can put almost anything in this.
					}
				}
				@bulma.NewBlock() {
					@bulma.H3("Buttons", false)
					@bulma.ButtonNewTab("https://bulma.io/documentation/elements/button/", "Button Docs", bulma.ColorDefault, bulma.SizeDefault)
					@bulma.NewBlock() {
						@bulma.H4("Preview", false)
						@bulma.NewBlock() {
							Buttons can have different colors.
							@html.Br()
							@bulma.NewButton(bulma.ColorDefault, bulma.SizeDefault) {
								Default
							}
							@bulma.NewButton(bulma.ColorInfo, bulma.SizeDefault) {
								Info
							}
							@bulma.NewButton(bulma.ColorPrimary, bulma.SizeDefault) {
								Primary
							}
							@bulma.NewButton(bulma.ColorSuccess, bulma.SizeDefault) {
								Success!
							}
							@bulma.NewButton(bulma.ColorDanger, bulma.SizeDefault) {
								Danger!
							}
						}
						@bulma.NewBlock() {
							You can also pick different sizes.
							@html.Br()
							@bulma.NewButton(bulma.ColorDefault, bulma.SizeSmall) {
								Small
							}
							@bulma.NewButton(bulma.ColorDefault, bulma.SizeDefault) {
								Default
							}
							@bulma.NewButton(bulma.ColorDefault, bulma.SizeMedium) {
								Medium
							}
							@bulma.NewButton(bulma.ColorDefault, bulma.SizeLarge) {
								Default
							}
						}
					}
				}
				@bulma.NewBlock() {
					@bulma.H3("Content", false)
					@bulma.ButtonNewTab("https://bulma.io/documentation/elements/content/", "Content Docs", bulma.ColorDefault, bulma.SizeDefault)
					@html.Br()
					This one is harder to show, but it can be used.
				}
				@bulma.NewBlock() {
					@bulma.H3("Delete", false)
					This one adds a cross icon and it can be attached to various elements.
					@html.Br()
					@bulma.ButtonNewTab("https://bulma.io/documentation/elements/delete/", "Delete Docs", bulma.ColorDefault, bulma.SizeDefault)
					@bulma.NewBlock() {
						@bulma.Delete(bulma.SizeSmall)
						@bulma.Delete(bulma.SizeDefault)
						@bulma.Delete(bulma.SizeMedium)
						@bulma.Delete(bulma.SizeLarge)
					}
				}
				@bulma.NewBlock() {
					@bulma.H3("Icons", false)
					Icons can be added to some elements.  
					If it supports an icon the variable will be 'fontAwesomeIcon'.
					@bulma.ButtonNewTab("https://fontawesome.com/icons", "fontawesome", bulma.ColorDefault, bulma.SizeDefault)
					@bulma.Icon("fa-gear")
				}
			}
			@bulma.RequiredModelScript()
			@bulma.RequiredNavbarToggleScript()
		}
	}
}

templ CssCode() {
	<style>
    code[class*=language-],pre[class*=language-]{color:#000;background:0 0;text-shadow:0 1px #fff;font-family:Consolas,Monaco,'Andale Mono','Ubuntu Mono',monospace;font-size:1em;text-align:left;white-space:pre;word-spacing:normal;word-break:normal;word-wrap:normal;line-height:1.5;-moz-tab-size:4;-o-tab-size:4;tab-size:4;-webkit-hyphens:none;-moz-hyphens:none;-ms-hyphens:none;hyphens:none}code[class*=language-] ::-moz-selection,code[class*=language-]::-moz-selection,pre[class*=language-] ::-moz-selection,pre[class*=language-]::-moz-selection{text-shadow:none;background:#b3d4fc}code[class*=language-] ::selection,code[class*=language-]::selection,pre[class*=language-] ::selection,pre[class*=language-]::selection{text-shadow:none;background:#b3d4fc}@media print{code[class*=language-],pre[class*=language-]{text-shadow:none}}pre[class*=language-]{padding:1em;margin:.5em 0;overflow:auto}:not(pre)>code[class*=language-],pre[class*=language-]{background:#f5f2f0}:not(pre)>code[class*=language-]{padding:.1em;border-radius:.3em;white-space:normal}.token.cdata,.token.comment,.token.doctype,.token.prolog{color:#708090}.token.punctuation{color:#999}.token.namespace{opacity:.7}.token.boolean,.token.constant,.token.deleted,.token.number,.token.property,.token.symbol,.token.tag{color:#905}.token.attr-name,.token.builtin,.token.char,.token.inserted,.token.selector,.token.string{color:#690}.language-css .token.string,.style .token.string,.token.entity,.token.operator,.token.url{color:#9a6e3a;background:hsla(0,0%,100%,.5)}.token.atrule,.token.attr-value,.token.keyword{color:#07a}.token.class-name,.token.function{color:#dd4a68}.token.important,.token.regex,.token.variable{color:#e90}.token.bold,.token.important{font-weight:700}.token.italic{font-style:italic}.token.entity{cursor:help}
    </style>
}
