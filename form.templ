package bulma

const (
	InputTypeText        = "text"
	InputTypePassword    = "password"
	InputTypeEmail       = "email"
	InputTypePhoneNumber = "tel"
)

// Creates a new standard HTML form.
templ NewForm(url string) {
	<form action={ templ.SafeURL(url) }>
		{ children... }
	</form>
}

// Creates a new HTML form that will be processed via HTMX.
templ NewHxForm(hxpostUrl string) {
	<form hx-post={ hxpostUrl }>
		{ children... }
	</form>
}

templ FormTextInput(id, fieldType, placeholder, color string) {
	<input class={ "input", color} name={ id } id={ id } type={ fieldType } placeholder={ placeholder }/>
}

// Creates a text form that populates a default value.
// This one gives you the option to mark the field as readonly so users are unable to change the value.
templ FormTextInputWithValue(id, fieldType, value, color string, readonly bool) {
	if readonly {
		<input class={ "input", color } name={ id } id={ id } type={ fieldType } value={ value } readonly/>
	} else {
		<input class={ "input", color } name={ id } id={ id } type={ fieldType } value={ value }/>
	}
}

templ FormCheckbox(text, id string) {
	<label class="checkbox">
		<input type="checkbox" id={ id }/> { text }
	</label>
}

// This will create a small bit of text to add context to the form.
templ FormLabel(text string) {
	<label class="label">{ text }</label>
}

// This is a helper to create the following object for you.
//
// @bulma.NewFormField() {
// 	@bulma.FormLabel(label)
// 	@bulma.NewFormControl() {
// 		@bulma.FormTextInput(id, bulma.InputTypeText, placeholder)
// 	}
// }
templ FormLabelTextInput(id, label, placeholder string) {
	@NewFormField() {
		@FormLabel(label)
		@NewFormControl() {
			@FormTextInput(id, InputTypeText, placeholder, ColorDefault)
		}
	}
}

// This is a helper that creates the following object for you.
//
// Accepts Children
//
//  @bulma.NewFormField() {
//	@bulma.FormLabel("Type")
//	@bulma.FormControl() {
//		@Newbulma.FormSelectOne("type", false) {
//			@bulma.FormSelectOneItem("Playlist")
//			@bulma.FormSelectOneItem("Artist")
//			@bulma.FormSelectOneItem("Album")
//		}
//	}
//}
templ FormLabelSelectOne(label, id string) {
	@NewFormField() {
		@FormLabel("Type")
		@NewFormControl() {
			@NewFormSelectOne("type", false) {
				{ children... }
			}
		}
	}
}

templ NewFormSelectOne(id string, isRound bool) {
	if isRound {
		<div class="select is-round">
			<select id={ id } name={ id }>
				{ children... }
			</select>
		</div>
	} else {
		<div class="select">
			<select id={ id } name={ id }>
				{ children... }
			</select>
		</div>
	}
}

templ FormSelectOneColor(color, id string, isRound bool) {
	if isRound {
		<div class={ "select is-round", color }>
			<select id={ id } name={ id }>
				{ children... }
			</select>
		</div>
	} else {
		<div class={ "select", color }>
			<select id={ id } name={ id }>
				{ children... }
			</select>
		</div>
	}
}

templ FormSelectOneItem(name string) {
	<option value={ name }>{ name }</option>
}

templ NewFormSelectMany(howManySelectable int, id string, isRound bool) {
	<div class="select is-multiple" id={ id }>
		<select multiple size="{ howManySelectable }">
			{ children... }
		</select>
	</div>
}

templ NewFormSelectManyColor(howManySelectable int, color, id string, isRound bool) {
	<div class={ "select is-multiple", color } id={ id }>
		<select multiple size="{ howManySelectable }">
			{ children... }
		</select>
	</div>
}

templ FormSelectManyItem(name string) {
	<option value={ name }>{ name }</option>
}

// This creates a field that you can add a Label, Control or Input object.
templ NewFormField() {
	<div class="field">
		{ children... }
	</div>
}

// Div container to add a input field to.
templ NewFormControl() {
	<div class="control">
		{ children... }
	</div>
}

templ FormSubmit(text, color string) {
	<button type="submit" class={ "button", color }>{ text }</button>
}

templ FormTextArea(id, placeholder, color string) {
	<textarea class={ "textarea", color } id={ id } placeholder={ placeholder }></textarea>
}
